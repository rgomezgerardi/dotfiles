(use-package files :straight (:type built-in)
      :demand
      :preface
      (defun +/save-buffers-kill-emacs (&optional arg)
	"Offer to save each buffer(once only, no modified buffers exist asking), then kill this Emacs process.
With prefix ARG, silently save all file-visiting buffers, then kill."
	(interactive "P")
	(save-some-buffers arg t)
	(and (or (not (fboundp 'process-list))
		 ;; process-list is not defined on MSDOS.
		 (let ((processes (process-list))
			       active)
		       (while processes
			 (and (memq (process-status (car processes)) '(run stop open listen))
			      (process-query-on-exit-flag (car processes))
			      (setq active t))
			 (setq processes (cdr processes)))
		       (or (not active)
			       (progn (list-processes t)
				      (yes-or-no-p "Active processes exist; kill them and exit anyway? ")))))
		 ;; Query the user for other things, perhaps.
		 (run-hook-with-args-until-failure 'kill-emacs-query-functions)
		 (or (null confirm-kill-emacs)
		 (funcall confirm-kill-emacs "Really exit Emacs? "))
		 (kill-emacs)))
      :custom
      (vc-handled-backends nil)
      (vc-follow-symlinks t)
      (vc-git-print-log-follow nil)
      (find-file-visit-truename t)
      (user-emacs-directory-warning t)

      ; Backups of edited data files.
      (make-backup-files nil)
      (backup-inhibited nil)

      :config
      (fset 'save-buffers-kill-emacs '+/save-buffers-kill-emacs)
      :general
      (leader-def
	"f" '(:ignore t :which-key "file")
	"f f" #'(find-file :wk "find")
	"f c" #'((lambda () (interactive) (find-file "~/.config/emacs/TANGLE.org")) :wk "config")
	"b k" #'(kill-current-buffer :wk "kill current buffer")
	"b K" #'(kill-buffer :wk "kill buffer")
	"b n" #'(next-buffer :wk "next buffer")
	"b p" #'(previous-buffer :wk "previous buffer")))
