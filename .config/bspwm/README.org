#+TITLE: BSPWM Custom Configuration 
#+AUTHOR: Ricardo Gomez
#+EMAIL: rgomezgerardi@gmail.com
#+PROPERTY: header-args :tangle bspwmrc :tangle-mode (identity #o755) :noweb strip-export :cache yes :shebang "#!/bin/sh"

* Config
** Global

#+begin_src shell
# Default split ratio.
bspc config split_ratio 0.52
 
# Prefix prepended to each of the status lines.
# bspc config status_prefix
 
# Absolute path to the command used to retrieve rule consequences.
# The command will receive the following arguments: window ID, class name, instance name, and intermediate consequences.
#The output of that command must have the following format: key1=value1 key2=value2 ...
#(the valid key/value pairs are given in the description of the rule command).
# bspc config external_rules_command
 
# The insertion scheme used when the insertion point is in automatic mode. Accept the following values:
# longest_side, alternate, spiral.
bspc config automatic_scheme longest_side
 
# On which child should a new window be attached when adding a window on a single window tree in automatic mode. Accept the following values: first_child, second_child.
bspc config initial_polarity first_child
 
# The tightness of the algorithm used to decide whether a window is on
# the DIR side of another window. Accept the following values: high, low.
# bspc config directional_focus_tightness

# Adjust the brother when unlinking a node from the tree in accordance with the automatic insertion scheme.
# bspc config removal_adjustment

# Draw the preselection feedback area. Defaults to true.
# bspc config presel_feedback

# Handle the next mapping_events_count mapping notify events. A negative value implies that every event needs to be handled.
# bspc config mapping_events_count

# Ignore EWMH focus requests coming from applications.
bspc config ignore_ewmh_focus false

# Block the fullscreen state transitions that originate from an EWMH request. The possible values are: none, all, or a comma separated list of the following values: enter, exit.
# bspc config ignore_ewmh_fullscreen

# Ignore strut hinting from clients requesting to reserve space (i.e. task bars).
bspc config ignore_ewmh_struts false
#+end_src

** Color

#+begin_src shell
# Color of the border of an unfocused window.
# bspc config normal_border_color
 
# Color of the border of a focused window of an unfocused monitor.
# bspc config active_border_color 
 
# Color of the border of a focused window of a focused monitor.
bspc config focused_border_color "#51afef"
 
# Color of the node --presel-{dir,ratio} message feedback area.
# bspc config presel_feedback_color
#+end_src

** Monitor

#+begin_src shell
# Padding space added at the sides of the monitor or desktop.
# bspc config top_padding, right_padding, bottom_padding, left_padding

# Consider disabled monitors as disconnected.
# bspc config remove_disabled_monitors

# Remove unplugged monitors.
# bspc config remove_unplugged_monitors
 
# Merge overlapping monitors (the bigger remains).
# bspc config merge_overlapping_monitors
#+end_src

** Desktop

#+begin_src shell
# Remove borders of tiled windows for the monocle desktop layout.
bspc config borderless_monocle true
 
# Remove gaps of tiled windows for the monocle desktop layout.
bspc config gapless_monocle false

# Padding space added at the sides of the screen for the monocle desktop layout.
# bspc config top_monocle_padding, right_monocle_padding, bottom_monocle_padding, left_monocle_padding
 
# Set the desktop layout to monocle if there’s only one tiled window in the tree.
bspc config single_monocle true
#+end_src
 
** Window
   
#+begin_src shell
# Size of the gap that separates windows.
bspc config window_gap 6

# Window border width.
bspc config border_width 2

# Center pseudo tiled windows into their tiling rectangles. Defaults to true.
bspc config center_pseudo_tiled true

# Apply ICCCM window size hints.
# bspc config honor_size_hints
#+end_src

** COMMENT Node

#+begin_src shell
#+end_src

** Pointer

#+begin_src shell
# The minimum interval, in milliseconds, between two motion notify events.
# bspc config pointer_motion_interval

# Keyboard modifier used for moving or resizing windows. Accept the following values:
# shift, control, lock, mod1, mod2, mod3, mod4, mod5.
# bspc config pointer_modifier
 
# Action performed when pressing pointer_modifier + button<n>. Accept the following values: move, resize_side, resize_corner, focus, none.
# bspc config pointer_action1, pointer_action2, pointer_action3

# When focusing a window, put the pointer at its center.
bspc config pointer_follows_focus false

# When focusing a monitor, put the pointer at its center.
bspc config pointer_follows_monitor true

# Button used for focusing a window (or a monitor). The possible values are: button1, button2, button3, any, none. Defaults to button1.
bspc config click_to_focus button1

# Don’t replay the click that makes a window focused if click_to_focus isn’t none.
bspc config swallow_first_click false

# Focus the window under the pointer.
bspc config focus_follows_pointer true
#+end_src

* Monitor

#+begin_src shell
# bspc monitor -d I II III IV V VI VII VIII IX X
bspc monitor -d 1 2 3 4 5 6 7 8 9 0
#+end_src

* Desktop

#+begin_src shell
bspc desktop ^1 --layout tiled
bspc desktop ^2 --layout monocle

bspc desktop ^3 --layout monocle
bspc desktop ^4 --layout monocle
bspc desktop ^5 --layout tiled
bspc desktop ^6 --layout monocle
bspc desktop ^7 --layout tiled
bspc desktop ^8 --layout monocle
bspc desktop ^9 --layout tiled
bspc desktop ^10 --layout tiled
#+end_src

** COMMENT Desktop where all windows are floating

#+begin_src shell
FLOATING_DESKTOP_ID=$(bspc query -D -d '^8')

bspc subscribe node_add | while read -a msg ; do
   desk_id=${msg[2]}
   wid=${msg[4]}
   [ "$FLOATING_DESKTOP_ID" = "$desk_id" ] && bspc node "$wid" -t floating
done
#+end_src

* Rules
  
#+begin_src shell
# Terminal
bspc rule -a St desktop='^1' state=tiled follow=on

# Search
bspc rule -a Chromium desktop='^2' state=tiled follow=on
bspc rule -a Brave-browser desktop='^2' state=tiled follow=on
bspc rule -a *:*:"Picture in picture" state=floating manage=off border=off
# bspc rule -a *:*:"Picture in picture" rectangle=512x288+$((1600-512))+$((900-288)) state=floating border=off manage=off
# Code
bspc rule -a Emacs desktop='^3' state=tiled follow=on
bspc rule -a Godot desktop='^3' state=tiled follow=on
bspc rule -a tiled desktop='^3' state=pseudo_tiled follow=on


# Editor
bspc rule -a Gimp desktop='^4' state=pseudo_tiled follow=on
bspc rule -a Krita desktop='^4' state=pseudo_tiled follow=on
bspc rule -a Inkscape desktop='^4' state=floating follow=on border=off
bspc rule -a Aseprite desktop='^4' state=pseudo_tiled follow=on
bspc rule -a PureRef state=floating

# Player
bspc rule -a mpv desktop='^5' state=tiled follow=on
bspc rule -a mplayer2 state=floating
bspc rule -a Zathura desktop='^5' state=tiled follow=on

# Gaming
bspc rule -a Steam desktop='^6' state=tiled follow=on

# Music
bspc rule -a Spotify desktop='^9'

# Random
bspc rule -a "VirtualBox Manager" desktop='^10' state=tiled follow=on

# Scratchpad
bspc rule -a Explorer state=floating
bspc rule -a Download state=floating
bspc rule -a Music state=floating
bspc rule -a Audio state=floating
#+end_src

* Start

#+begin_src shell
mapfile -t commands <<- eof
	st
	brave
eof

if ! bspc query -N &> /dev/null; then  # there are no windows
	for i in "${!commands[@]}"; do  # Execute commands and wait until they are launched
		"${commands[i]}" &
		# until pidof -xqs ${commands[i]}; do sleep 1; done 
		while sleep 0.5; do pidof -xqs ${commands[i]} && break; done
	done

	# Scratchpads
	if command -v tdrop &> /dev/null; then
		local args=(-w 90% -h 90% -x 5% -y 5% -a -m)
		tdrop "${args[@]}" --class "explorer" --name "Explorer" -n 1 st -n "explorer" -c "Explorer" vifm
		tdrop "${args[@]}" --class "explorer" --name "Explorer" -n 1 st -n "explorer" -c "Explorer" vifm
		# tdrop "${args[@]}" --class "download" --name "Download" -n 2 st -n "download" -c "Download" rtorrent 
		# tdrop "${args[@]}" --class "audio" --name "Audio" -n 3 st -n "audio" -c "Audio" ncpamixer
		# tdrop "${args[@]}" --class "music" --name "Music" -n 4 st -n "music" -c "Music" mocp --config ~/.config/moc/config 
	fi

	# Especify a desktop to start, otherwise it will start in the desktop of the last application launched
	bspc desktop ^2 --focus
fi

#+end_src

* Receptacles
  
